# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  beats {
    port => 5044
  }
}

filter {
      grok {
        match => { "message" => ["%{TIMESTAMP_ISO8601:time} %{NUMBER:warning_code} %{WORD:message_type} %{DATA:service} \[req-%{GREEDYDATA:request_id} - - - - -\] %{GREEDYDATA:err_msg} %{GREEDYDATA:VF_number}: %{DATA:pci_device_error}: %{WORD:device_type} device %{DATA:device_id2$ %{GREEDYDATA:error_msg_dev}" , "%{TIMESTAMP_ISO8601:time} %{NUMBER:info_code} %{WORD:message_type} %{DATA:info_desc} \[req-%{DATA:req_id} - %{GREEDYDATA}\] %{DATA}=%{DATA:resource_name} %{GREEDYDATA}=%{DATA:res_phys_ram} %{GREEDYDATA}=%{DATA:res_used_ram} %{GREEDYDATA}=%{DATA:res_phys_disk} %{GREEDYDATA}=%{DATA:res_used_disk} %{GREEDYDATA}=%{DATA:res_total_vcpus} %{GREEDYDATA}=%{DATA:res_used_vcpus} %{GREEDYDATA}=%{GREEDYDATA:res_pci_stats}"]}
      }
}


output {
  if "_grokparsefailure" in [tags] {
    # write events that didn't match to a file
    file { "path" => "/Users/basavyr/Library/Mobile Documents/com~apple~CloudDocs/Work/Pipeline/DevWorkspace/Github/ELK-Stack-macOS/Resources/LOGS/parse_failure.txt" }
  } else {
      elasticsearch {
    hosts => ["http://localhost:9200"]
    manage_template => false
    index => "%{[fields][log_type]}-index"
  }
  }

}
